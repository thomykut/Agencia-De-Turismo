import main.*

test "Aplicar un descuento del 20% a marDeAjo" {
	
	marDeAjo.aplicarDescuento(20)
	assert.equals(2000, marDeAjo.precio())
	
}

test "Ver si marDelPlata es un destino peligroso" {

	assert.notThat(marDelPlata.esDestinoPeligroso())

}

test "Luego de aplicarle un descuento del 50% a los destinos, el precio de lasToninas es 1750" {

	barrileteCosmico.aplicarDescuentoALosDestinos(50)
	assert.equals(1750, lasToninas.precio())

}

test "barrileteCosmico es una empresaExtrema" {

	assert.that(barrileteCosmico.esEmpresaExtrema())

}

test "El unico destino peligroso de barrileteCosmico es lasToninas" {

	assert.equals(#{lasToninas}, barrileteCosmico.destinos().filter({destino => destino.esDestinoPeligroso()}))

}

test "pabloHari intenta volar a marDeAjo pero no consigue conocer el destino" {
	
	pabloHari.volarA(marDeAjo)
	assert.notThat(pabloHari.conoce(marDeAjo))
}

test "pabloHari intenta volar a marDeAjo y le quedan $1500 en su cuenta" {
	
	pabloHari.volarA(marDeAjo)
	assert.equals(1500, pabloHari.dineroEnCuenta())
}

test "pabloHari tiene 500 km disponibles" {
	
	assert.equals(500, pabloHari.obtenerKilometrosDisponibles())
}

test "Comprobar que marDelPlata esta en la carta de destinos de barrileteCosmico " {
	
	assert.that(barrileteCosmico.conocerCartaDeDestinos().contains("Silver's Sea"))
}
